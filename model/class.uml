@startuml

class Exception

namespace dal {
	Adapter <|-- DBVersionAdapter
	Adapter <|-- LdapAdapter
	Adapter <|-- LocationAdapter
	Adapter <|-- UserAdapter

	DBVersionAdapter -- DBVersionRow
	LdapAdapter -- LdapRow
	LocationAdapter -- LocationRow
	UserAdapter -- UserRow

	class Connection {
		-{static} dsn : String
		-{static} user : String
		-{static} password : String
		-{static} isInitialized : bool
		-pdo : PDO
		+void connect()
		-{static} init()
		+array insert( sql : String, params : array )
		+bool isConnected()
		+array query( sql : String, params : array)
	}

	class Adapter {
		#conn : Connection
		+void constructor( connection : Connection )
	}

	class DBVersionAdapter {
		-{static} SQL_GET_VERSION : String
		+String getVersion()
	}

	class DBVersionRow {
		+value : String
	}

	class LanguageRow {
		+id : int
		+code : String
		+name : String
	}

	class LdapAdapter {
		-{static} SQL_GET_CONFIG : String
		+LdapRow getConfig()
		+{static} bool validateUser( servers : String, domain : String, user : String, password : String )
	}

	class LdapRow {
		+id : int
		+domain_name : String
		+base_dn : String
		+servers_name : String
		+use_ssl : bool
		+use_tls : bool
		+port : int
		+filter : String
		+{static} getInstance( row : array )
	}

	class LocationAdapter {
		-{static} SQL_GET_LOCATIONS : String
		+LocationRow[] getLocations()
	}

	class LocationRow {
		+id : int
		+name : String
		+description : String
	}

	class UserAdapter {
		-{static} SQL_GET_USER_COUNT : String
		-{static} SQL_CREATE_USER : String
		-{static} SQL_IS_LDAP : String
		-{static} SQL_GET_USER : String
		-{static} SQL_GET_USER_WITH_PASSWORD : String
		+bool createUser( row : UserRow )
		+UserRow getUser( user : String )
		+UserRow getUser( user : String, password : String)
		+int getUsersCount()
		+bool isLdap()
	}

	class UserRow {
		+id : int
		+user : String
		+password : String
		+email : String
		+name : String
		+admin : bool
		+is_ldap : bool
		+language : int
		+{static} getInstance( row : array )
	}
}

namespace bll {
	.Exception <|-- InvalidSessionException

	class Migration {
		-conn : dal.Connection
		+String getVersion()
	}

	class Session {
		-{static} VALIDATION_ID : String
		-token : String
		+{static} Session create()
		+bool destroy()
		+{static} Session getInstance( token : String )
		+bool getIsAdmin()
		-bool getIsValid()
		+int getLanguage()
		+String getToken()
		+String getUser()
		+void setIsAdmin( isadmin : bool )
		+void setIsValid( isvalid : bool )
		+void setLanguage( lang : int )
		+void setUser()
	}

	class Logon {
		-conn : dal.Connection
		-dldap : dal.LdapAdapter
		-duser : dal.UserAdapter
		-session : Session
		+constructor( session : Session )
		+bool createFirstLogin( user : String, password : String, email : String, name : String )
		+{static} Logon getInstance( session : Session )
		+bool hasUsers()
		+bool initialize( user : String, password : String )
		-{static} String saltPassword( user : String, password : String )
	}
}

' vim: ts=2 sw=2
@enduml
