@startuml

namespace dal {
	Adapters <|-- DBVersionAdapter
	Adapters <|-- LdapAdapter
	Adapters <|-- LocationAdapter
	Adapters <|-- UserAdapter

	DBVersionAdapter -- DBVersionRow
	LdapAdapter -- LdapRow
	LocationAdapter -- LocationRow
	UserAdapter -- UserRow

	class Connection {
		-pdo : PDO
		+void connect()
		+array insert()
		+bool isConnected()
		+array query()
	}

	class Adapters {
		#PDO getConnection()
	}

	class DBVersionAdapter {
		-{static} SQL_GET_VERSION : String
		+DBVersionRow getVersion()
	}

	class DBVersionRow {
		+value : String
	}

	class LanguageRow {
		+id : int
		+code : String
		+name : String
	}

	class LdapAdapter {
		-{static} SQL_GET_CONFIG : String
		+LdapRow getConfig()
		+bool hasUser()
	}

	class LdapRow {
		+id : int
		+domain_name : String
		+base_dn : String
		+servers_name : String
		+use_ssl : bool
		+use_tls : bool
		+port : int
		+filter : String
	}

	class LocationAdapter {
		-{static} SQL_GET_LOCATIONS : String
		+LocationRow[] getLocations()
	}

	class LocationRow {
		+id : int
		+name : String
		+description : String
	}

	class UserAdapter {
		-{static} SQL_GET_USERS_COUNT : String
		-{static} SQL_CREATE_USER : String
		-{static} SQL_IS_LDAP : String
		-{static} SQL_GET_USER : String
		-{static} SQL_GET_USER_WITH_PASSWORD : String
		+bool createUser( row : UserRow )
		+UserRow getUser( user : String )
		+UserRow getUserWithPassword( user : String, password : String)
		+int getUsersCount()
		+bool isLdap()
	}

	class UserRow {
		+id : int
		+user : String
		+password : String
		+email : String
		+name : String
		+admin : bool
		+is_ldap : bool
		+language : int
	}
}

namespace bll {
	class DBVersion {
		-dal_dbversion : dal.DBVersion
		+constructor()
		+String getVersion()
	}

	class Ldap {
		-dal_ldap : dal.Ldap
		+constructor()
		+String getConfig()
	}

	class Session {
		-{static} VALIDATION_ID : String
		+{static} String createToken()
		+{static} bool destroyToken()
		+{static} bool getIsAdmin()
		+{static} bool getIsValid()
		+{static} int getLanguage()
		+{static} String getUser()
		+{static} void setIsAdmin()
		+{static} void setIsValid()
		+{static} void setLanguage()
		+{static} void setToken()
		+{static} void setUser()
	}

	class User {
		-dal_user : dal.User
		-dal_ldap : dal.Ldap
		+constructor()
		+bool createFirstLogin()
		+bool hasUsers()
		+bool logon()
		-array logonLdap()
		-array logonLocal()
		-{static} String saltPassword()
	}
}

' vim: ts=2 sw=2
@enduml
